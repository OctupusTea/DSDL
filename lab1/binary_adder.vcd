$date
	Sat Apr 28 23:13:39 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module adder_tb $end
$var wire 6 ! sum [5:0] $end
$var reg 6 " a [5:0] $end
$var reg 6 # b [5:0] $end
$scope module binary_adder $end
$var wire 6 $ a [5:0] $end
$var wire 6 % b [5:0] $end
$var wire 6 & sum [5:0] $end
$scope module full_adder0 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 ) carry_in $end
$var wire 1 * carry_out $end
$var wire 1 + carry_temp0 $end
$var wire 1 , carry_temp1 $end
$var wire 1 - sum $end
$var wire 1 . sum_temp $end
$upscope $end
$scope module full_adder1 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 * carry_in $end
$var wire 1 1 carry_out $end
$var wire 1 2 carry_temp0 $end
$var wire 1 3 carry_temp1 $end
$var wire 1 4 sum $end
$var wire 1 5 sum_temp $end
$upscope $end
$scope module full_adder2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 1 carry_in $end
$var wire 1 8 carry_out $end
$var wire 1 9 carry_temp0 $end
$var wire 1 : carry_temp1 $end
$var wire 1 ; sum $end
$var wire 1 < sum_temp $end
$upscope $end
$scope module full_adder3 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 8 carry_in $end
$var wire 1 ? carry_out $end
$var wire 1 @ carry_temp0 $end
$var wire 1 A carry_temp1 $end
$var wire 1 B sum $end
$var wire 1 C sum_temp $end
$upscope $end
$scope module full_adder4 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 ? carry_in $end
$var wire 1 F carry_out $end
$var wire 1 G carry_temp0 $end
$var wire 1 H carry_temp1 $end
$var wire 1 I sum $end
$var wire 1 J sum_temp $end
$upscope $end
$scope module full_adder5 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 F carry_in $end
$var wire 1 M carry_out $end
$var wire 1 N carry_temp0 $end
$var wire 1 O carry_temp1 $end
$var wire 1 P sum $end
$var wire 1 Q sum_temp $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
1B
0A
0@
0?
0>
0=
1<
0;
1:
09
18
07
16
15
04
13
02
11
10
0/
0.
0-
0,
1+
1*
0)
1(
1'
b1000 &
b11 %
b101 $
b11 #
b101 "
b1000 !
$end
#1000
1B
1;
b1100 !
b1100 &
0:
18
0<
19
17
b111 #
b111 %
#2000
0;
01
0I
14
03
0?
1-
0*
08
1B
b1011 !
b1011 &
0A
1.
0+
09
1C
0(
07
06
1=
b10 #
b10 %
b1001 "
b1001 $
#3000
1P
1I
b111011 !
b111011 &
1Q
1J
1L
1D
b100010 #
b100010 %
b11001 "
b11001 $
#4000
