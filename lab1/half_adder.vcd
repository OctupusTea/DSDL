$date
	Sat Apr 28 22:50:23 2018
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Half_Adder_Tb $end
$var wire 1 ! carry $end
$var wire 1 " sum $end
$var reg 1 # a $end
$var reg 1 $ b $end
$scope module half_adder $end
$var wire 1 % a $end
$var wire 1 & b $end
$var wire 1 ! carry_out $end
$var wire 1 " sum $end
$upscope $end
$upscope $end
$scope module adder_tb $end
$var wire 6 ' sum [5:0] $end
$var reg 6 ( a [5:0] $end
$var reg 6 ) b [5:0] $end
$scope module binary_adder $end
$var wire 6 * a [5:0] $end
$var wire 6 + b [5:0] $end
$var wire 6 , sum [5:0] $end
$scope module full_adder0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / carry_in $end
$var wire 1 0 carry_out $end
$var wire 1 1 carry_temp $end
$var wire 1 2 sum $end
$var wire 1 3 sum_temp $end
$scope module half_adder0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 1 carry_out $end
$var wire 1 3 sum $end
$upscope $end
$scope module half_adder1 $end
$var wire 1 3 a $end
$var wire 1 / b $end
$var wire 1 0 carry_out $end
$var wire 1 2 sum $end
$upscope $end
$upscope $end
$scope module full_adder1 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 0 carry_in $end
$var wire 1 6 carry_out $end
$var wire 1 7 carry_temp $end
$var wire 1 8 sum $end
$var wire 1 9 sum_temp $end
$scope module half_adder0 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 7 carry_out $end
$var wire 1 9 sum $end
$upscope $end
$scope module half_adder1 $end
$var wire 1 9 a $end
$var wire 1 0 b $end
$var wire 1 6 carry_out $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope module full_adder2 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 6 carry_in $end
$var wire 1 < carry_out $end
$var wire 1 = carry_temp $end
$var wire 1 > sum $end
$var wire 1 ? sum_temp $end
$scope module half_adder0 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 = carry_out $end
$var wire 1 ? sum $end
$upscope $end
$scope module half_adder1 $end
$var wire 1 ? a $end
$var wire 1 6 b $end
$var wire 1 < carry_out $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$scope module full_adder3 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 < carry_in $end
$var wire 1 B carry_out $end
$var wire 1 C carry_temp $end
$var wire 1 D sum $end
$var wire 1 E sum_temp $end
$scope module half_adder0 $end
$var wire 1 @ a $end
$var wire 1 A b $end
$var wire 1 C carry_out $end
$var wire 1 E sum $end
$upscope $end
$scope module half_adder1 $end
$var wire 1 E a $end
$var wire 1 < b $end
$var wire 1 B carry_out $end
$var wire 1 D sum $end
$upscope $end
$upscope $end
$scope module full_adder4 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 B carry_in $end
$var wire 1 H carry_out $end
$var wire 1 I carry_temp $end
$var wire 1 J sum $end
$var wire 1 K sum_temp $end
$scope module half_adder0 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 I carry_out $end
$var wire 1 K sum $end
$upscope $end
$scope module half_adder1 $end
$var wire 1 K a $end
$var wire 1 B b $end
$var wire 1 H carry_out $end
$var wire 1 J sum $end
$upscope $end
$upscope $end
$scope module full_adder5 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 H carry_in $end
$var wire 1 N carry_out $end
$var wire 1 O carry_temp $end
$var wire 1 P sum $end
$var wire 1 Q sum_temp $end
$scope module half_adder0 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 O carry_out $end
$var wire 1 Q sum $end
$upscope $end
$scope module half_adder1 $end
$var wire 1 Q a $end
$var wire 1 H b $end
$var wire 1 N carry_out $end
$var wire 1 P sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module Half_Adder_Tb $end
$scope module half_adder $end
$upscope $end
$upscope $end
$scope module adder_tb $end
$scope module binary_adder $end
$scope module full_adder0 $end
$scope module half_adder0 $end
$upscope $end
$scope module half_adder1 $end
$upscope $end
$upscope $end
$scope module full_adder1 $end
$scope module half_adder0 $end
$upscope $end
$scope module half_adder1 $end
$upscope $end
$upscope $end
$scope module full_adder2 $end
$scope module half_adder0 $end
$upscope $end
$scope module half_adder1 $end
$upscope $end
$upscope $end
$scope module full_adder3 $end
$scope module half_adder0 $end
$upscope $end
$scope module half_adder1 $end
$upscope $end
$upscope $end
$scope module full_adder4 $end
$scope module half_adder0 $end
$upscope $end
$scope module half_adder1 $end
$upscope $end
$upscope $end
$scope module full_adder5 $end
$scope module half_adder0 $end
$upscope $end
$scope module half_adder1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
1?
1>
0=
0<
0;
1:
19
18
07
06
15
04
03
02
11
00
0/
1.
1-
b110 ,
b11 +
b101 *
b11 )
b101 (
b110 '
0&
0%
0$
0#
0"
0!
$end
#1000
0>
b10 '
b10 ,
0?
1=
1;
b111 )
b111 +
#2000
12
1D
b1011 '
b1011 ,
13
01
0=
1E
0.
0;
0:
1@
1"
b10 )
b10 +
b1001 (
b1001 *
1$
1&
#3000
1P
1J
b111011 '
b111011 ,
1Q
1K
1M
1F
b100010 )
b100010 +
b11001 (
b11001 *
0$
0&
1#
1%
#4000
0"
1!
1$
1&
